import numpy as np
import scipy.stats as stats

# question = Retrieving data. Wait a few seconds and try to cut or copy again.

yes_llm = 35
yes_manual = 40
total_samples = 215


def two_proportion_z_test(yes_llm, yes_manual, total_samples, alpha=0.05):
    """
    Conducts a two-proportion Z-test to determine whether there is a significant
    difference between two proportions.

    Parameters:
    yes_llm (int): Count of "yes" responses in the LLM-based group.
    yes_manual (int): Count of "yes" responses in the manual group.
    total_samples (int): Total number of samples in each group.
    alpha (float, optional): Significance level for hypothesis testing. Default is 0.05.

    Returns:
    dict: A dictionary containing the Z-Statistic, P-Value, and the conclusion.
    """

    # Compute proportions for both groups
    p1 = yes_llm / total_samples  # Proportion of "yes" responses in LLM group
    p2 = yes_manual / total_samples  # Proportion of "yes" responses in Manual group

    # Compute the pooled proportion across both groups
    p_pooled = (yes_llm + yes_manual) / (2 * total_samples)

    # Compute standard error of the difference
    se = np.sqrt(p_pooled * (1 - p_pooled) * (2 / total_samples))

    # Compute the Z-score (test statistic)
    z_stat = (p1 - p2) / se

    # Compute the p-value for the two-tailed test
    p_value = 2 * (1 - stats.norm.cdf(np.abs(z_stat)))

    # Interpretation of results
    conclusion = (
        "Reject the null hypothesis: Significant difference found."
        if p_value < alpha
        else "Fail to reject the null hypothesis: No significant difference."
    )

    return {"Z-Statistic": z_stat, "P-Value": p_value, "Conclusion": conclusion}


# Call the function and print results
results = two_proportion_z_test(yes_llm, yes_manual, total_samples)
print(results)
